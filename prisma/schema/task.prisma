model Script {
  name       String           @id
  parameters Parameter[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  Author     User?            @relation(fields: [authorId], references: [id])
  authorId   Int?
  templates  TemplateScript[]
}

model Parameter {
  id              String            @id @default(uuid())
  name            String
  type            String
  scriptId        String
  script          Script            @relation(fields: [scriptId], references: [name], onDelete: Cascade)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ObjectParameter ObjectParameter[]
  ValueParameter  ValueParameter[]
}

model ValueParameter {
  id          Int       @id @default(autoincrement())
  parameterId String
  testCaseId  Int
  value       String
  parameter   Parameter @relation(fields: [parameterId], references: [id], onDelete: Cascade)
  TestCase    TestCase  @relation(fields: [testCaseId], references: [id])
}

model ObjectParameter {
  id          Int       @id @default(autoincrement())
  parameterId String
  testCaseId  Int
  key         String
  value       String
  parameter   Parameter @relation(fields: [parameterId], references: [id], onDelete: Cascade)
  TestCase    TestCase  @relation(fields: [testCaseId], references: [id])
}

model Task {
  id           Int        @id @default(autoincrement())
  authorId     Int?
  instructions String
  name         String
  author       User?      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  templateName String
  template     Template   @relation(fields: [templateName], references: [name])
  testCases    TestCase[]
  solutions    Solution[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model TestCase {
  id               Int               @id @default(autoincrement())
  taskId           Int
  task             Task              @relation(fields: [taskId], references: [id], onDelete: Cascade)
  results          Result[]
  valueParameters  ValueParameter[]
  objectParameters ObjectParameter[]
}

model Template {
  authorId  Int?
  name      String           @id
  author    User?            @relation(fields: [authorId], references: [id])
  scripts   TemplateScript[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  Task      Task[]
}

model TemplateScript {
  id           Int      @id @default(autoincrement())
  templateName String
  scriptName   String
  order        Int
  template     Template @relation(fields: [templateName], references: [name])
  script       Script   @relation(fields: [scriptName], references: [name])
  createdAt    DateTime @default(now())
}

model Solution {
  id        Int      @id @default(autoincrement())
  taskId    Int
  studentId Int
  codeSrc   String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  student   User     @relation(fields: [studentId], references: [id], onDelete: Cascade)
  results   Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Result {
  id           Int      @id @default(autoincrement())
  solutionId   Int
  testCaseId   Int
  errorMessage String?
  status       String
  solution     Solution @relation(fields: [solutionId], references: [id], onDelete: Cascade)
  testCase     TestCase @relation(fields: [testCaseId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
