model Script {
  id                      String           @id @default(uuid())
  name                    String
  sourceCode              String
  parameters              Parameter[]
  dependenciesAsOriginal  Dependency[]     @relation("OriginalScript")
  dependenciesAsDependant Dependency[]     @relation("DependantScript")
  createdAt               DateTime         @default(now())
  updatedAt               DateTime         @updatedAt
  User                    User?            @relation(fields: [userId], references: [id])
  userId                  Int?
  TemplateScript          TemplateScript[]
}

model Parameter {
  id              String            @id @default(uuid())
  name            String
  type            String
  scriptId        String
  script          Script            @relation(fields: [scriptId], references: [id], onDelete: Cascade)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ObjectParameter ObjectParameter[]
}

model ValueParameter {
  id         Int      @id @default(autoincrement())
  testCaseId Int
  value      String
  testCase   TestCase @relation(fields: [testCaseId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ObjectParameter {
  id          Int       @id @default(autoincrement())
  parameterId String
  testCaseId  Int
  key         String
  value       String
  parameter   Parameter @relation(fields: [parameterId], references: [id], onDelete: Cascade)
  testCase    TestCase  @relation(fields: [testCaseId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Dependency {
  id          String   @id @default(uuid())
  originalId  String
  dependantId String
  original    Script   @relation("OriginalScript", fields: [originalId], references: [id], onDelete: Cascade)
  dependant   Script   @relation("DependantScript", fields: [dependantId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id              Int        @id @default(autoincrement())
  authorId        Int
  instructionsSrc String
  author          User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  files           File[]
  testCases       TestCase[]
  solutions       Solution[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model File {
  id         Int      @id @default(autoincrement())
  taskId     Int
  sourceCode String
  fileName   String
  task       Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model TestCase {
  id               Int               @id @default(autoincrement())
  taskId           Int
  templateId       Int
  name             String
  description      String
  task             Task              @relation(fields: [taskId], references: [id], onDelete: Cascade)
  template         Template          @relation(fields: [templateId], references: [id], onDelete: Cascade)
  results          Result[]
  valueParameters  ValueParameter[]
  objectParameters ObjectParameter[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model Template {
  id              Int              @id @default(autoincrement())
  authorId        Int
  name            String
  description     String
  type            String
  author          User             @relation(fields: [authorId], references: [id], onDelete: Cascade)
  testCases       TestCase[]
  templateScripts TemplateScript[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model TemplateScript {
  id          Int      @id @default(autoincrement())
  scriptId    String
  templateId  Int
  name        String
  description String
  order       Int
  script      Script   @relation(fields: [scriptId], references: [id], onDelete: Cascade)
  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Solution {
  id        Int      @id @default(autoincrement())
  taskId    Int
  studentId Int
  codeSrc   String
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  student   User     @relation(fields: [studentId], references: [id], onDelete: Cascade)
  results   Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Result {
  id           Int      @id @default(autoincrement())
  solutionId   Int
  testCaseId   Int
  errorMessage String?
  status       String
  solution     Solution @relation(fields: [solutionId], references: [id], onDelete: Cascade)
  testCase     TestCase @relation(fields: [testCaseId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
